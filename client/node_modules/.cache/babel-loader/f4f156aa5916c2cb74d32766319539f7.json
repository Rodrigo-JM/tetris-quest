{"ast":null,"code":"var _jsxFileName = \"/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GridRow from './GridRow';\nimport { createGrid } from '../redux/board';\nimport { createPiece } from '../redux/pieces';\nconst keysObj = {\n  40: 'down',\n  37: 'left',\n  39: 'right',\n  32: 'space',\n  90: 'z',\n  88: 'x'\n};\n\nconst createKeyEvent = () => {\n  window.addEventListener('keydown', function (event) {\n    console.log(keysObj[event.keyCode]);\n  });\n};\n\nexport class Grid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.contextTypes = {\n      redux: React.PropTypes.object\n    };\n  }\n\n  componentDidMount() {\n    this.props.build();\n    createKeyEvent();\n    this.props.createPiece(null, 'BLOCK');\n    console.log(this.context.redux.getState());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, this.props.board.map((row, index) => {\n      return /*#__PURE__*/React.createElement(GridRow, {\n        index: index,\n        key: index,\n        row: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }\n      });\n    }).reverse()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.board\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    build: () => dispatch(createGrid()),\n    createPiece: (center, type) => dispatch(createPiece(center, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js"],"names":["React","Component","connect","GridRow","createGrid","createPiece","keysObj","createKeyEvent","window","addEventListener","event","console","log","keyCode","Grid","contextTypes","redux","PropTypes","object","componentDidMount","props","build","context","getState","render","board","map","row","index","reverse","mapStateToProps","state","mapDispatchToProps","dispatch","center","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,OAAO,GAAG;AACb,MAAI,MADS;AAEb,MAAI,MAFS;AAGb,MAAI,OAHS;AAIb,MAAI,OAJS;AAKb,MAAI,GALS;AAMb,MAAI;AANS,CAAhB;;AASA,MAAMC,cAAc,GAAG,MAAM;AACzBC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAASC,KAAT,EAAgB;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACI,KAAK,CAACG,OAAP,CAAnB;AACH,GAFD;AAGH,CAJD;;AAMA,OAAO,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAChCc,YADgC,GACjB;AACXC,MAAAA,KAAK,EAAEhB,KAAK,CAACiB,SAAN,CAAgBC;AADZ,KADiB;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,KAAX;AACAd,IAAAA,cAAc;AACd,SAAKa,KAAL,CAAWf,WAAX,CAAuB,IAAvB,EAA6B,OAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKU,OAAL,CAAaN,KAAb,CAAmBO,QAAnB,EAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,0BAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,KAAhB;AAAuB,QAAA,GAAG,EAAEA,KAA5B;AAAmC,QAAA,GAAG,EAAED,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,EAEGE,OAFH,EAFJ,CADJ,CADJ;AAWH;;AAxB+B;;AA2BpC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADV,GAAP;AAIH,CALD;;AAOA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHZ,IAAAA,KAAK,EAAE,MAAMY,QAAQ,CAAC7B,UAAU,EAAX,CADlB;AAEHC,IAAAA,WAAW,EAAE,CAAC6B,MAAD,EAASC,IAAT,KAAkBF,QAAQ,CAAC5B,WAAW,CAAC6B,MAAD,EAASC,IAAT,CAAZ;AAFpC,GAAP;AAIH,CALD;;AAOA,eAAejC,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport GridRow from './GridRow'\nimport { createGrid } from '../redux/board'\nimport { createPiece } from '../redux/pieces'\n\nconst keysObj = {\n   40: 'down',\n   37: 'left',\n   39: 'right',\n   32: 'space',\n   90: 'z',\n   88: 'x'\n}\n\nconst createKeyEvent = () => {\n    window.addEventListener('keydown', function(event) {\n        console.log(keysObj[event.keyCode])\n    })\n}\n\nexport class Grid extends Component {\n    contextTypes = {\n        redux: React.PropTypes.object\n      }\n    \n    componentDidMount() {\n        this.props.build()\n        createKeyEvent();   \n        this.props.createPiece(null, 'BLOCK');\n        console.log(this.context.redux.getState())\n    }\n\n    render() {\n        return (\n            <table>\n                <tbody>\n                {\n                    this.props.board.map((row, index) => {\n                        return <GridRow index={index} key={index} row={row} />\n                    }).reverse()\n                }\n                </tbody>\n            </table>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        board: state.board\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        build: () => dispatch(createGrid()),\n        createPiece: (center, type) => dispatch(createPiece(center, type)), \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n"]},"metadata":{},"sourceType":"module"}