{"ast":null,"code":"//1 per game\n//spawns pieces\n//handles player input\n//stores offset datasets\nconst CREATED_PIECE = 'CREATED_PIECE';\n\nconst createdPiece = piece => {\n  return {\n    type: CREATED_PIECE,\n    piece\n  };\n};\n\nexport const createPiece = (centerLocation, type) => {\n  return function (dispatch) {\n    let location = [4, 19];\n\n    if (!centerLocation) {\n      location = centerLocation;\n    }\n\n    const piece = {\n      type: type,\n      center: location\n    };\n    dispatch(createdPiece(piece));\n  };\n};\n\nconst piecesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATED_PIECE:\n      return action.piece;\n\n    default:\n      return state;\n  }\n};\n\nexport default piecesReducer;","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/redux/pieces.js"],"names":["CREATED_PIECE","createdPiece","piece","type","createPiece","centerLocation","dispatch","location","center","piecesReducer","state","action"],"mappings":"AAAA;AACA;AACA;AACA;AAIA,MAAMA,aAAa,GAAG,eAAtB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAEH,aADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAME,WAAW,GAAG,CAACC,cAAD,EAAiBF,IAAjB,KAA0B;AACjD,SAAO,UAASG,QAAT,EAAmB;AACtB,QAAIC,QAAQ,GAAG,CAAC,CAAD,EAAI,EAAJ,CAAf;;AAEA,QAAI,CAACF,cAAL,EAAqB;AACjBE,MAAAA,QAAQ,GAAGF,cAAX;AACH;;AAED,UAAMH,KAAK,GAAG;AACVC,MAAAA,IAAI,EAAEA,IADI;AAEVK,MAAAA,MAAM,EAAED;AAFE,KAAd;AAKAD,IAAAA,QAAQ,CAACL,YAAY,CAACC,KAAD,CAAb,CAAR;AACH,GAbD;AAcH,CAfM;;AAkBP,MAAMO,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACR,IAAf;AACI,SAAKH,aAAL;AACI,aAAOW,MAAM,CAACT,KAAd;;AACJ;AACI,aAAOQ,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeD,aAAf","sourcesContent":["//1 per game\n//spawns pieces\n//handles player input\n//stores offset datasets\n\n\n\nconst CREATED_PIECE = 'CREATED_PIECE';\n\nconst createdPiece = piece => {\n    return {\n        type: CREATED_PIECE,\n        piece\n    }\n}\n\nexport const createPiece = (centerLocation, type) => {\n    return function(dispatch) {\n        let location = [4, 19]\n    \n        if (!centerLocation) {\n            location = centerLocation;\n        }\n    \n        const piece = {\n            type: type,\n            center: location,\n        }\n    \n        dispatch(createdPiece(piece))\n    }    \n}\n\n\nconst piecesReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATED_PIECE:\n            return action.piece\n        default: \n            return state\n    }\n}\n\nexport default piecesReducer"]},"metadata":{},"sourceType":"module"}