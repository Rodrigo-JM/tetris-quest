{"ast":null,"code":"//1 per piece\n//spawns tiles in proper locations\n//conains movement rotation functions\nconst canSpawn = (piece, grid) => {\n  switch (piece.type) {\n    case 'BLOCK':\n      if (grid[piece.center[1]][piece.center[0]]) {\n        return false;\n      } else {\n        return true;\n      }\n\n    default:\n      return null;\n  }\n};\n\nconst CREATED_TILES = 'CREATED_TILES';\n\nconst createdTiles = tiles => {\n  return {\n    type: CREATED_TILES,\n    tiles\n  };\n};\n\nexport const createTiles = (piece, grid) => {\n  return function (dispatch) {\n    if (canSpawn(piece, grid)) {\n      const tiles = [[piece.center[0], peice.center[1]]];\n      dispatch(createdTiles());\n    }\n  };\n};\n\nconst tilesReducer = (state = [], action) => {\n  switch (action.type) {\n    case CREATED_TILES:\n      return action.tiles;\n\n    default:\n      return state;\n  }\n};\n\nexport default tilesReducer;","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/redux/piece.js"],"names":["canSpawn","piece","grid","type","center","CREATED_TILES","createdTiles","tiles","createTiles","dispatch","peice","tilesReducer","state","action"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC9B,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,OAAL;AACI,UAAGD,IAAI,CAACD,KAAK,CAACG,MAAN,CAAa,CAAb,CAAD,CAAJ,CAAsBH,KAAK,CAACG,MAAN,CAAa,CAAb,CAAtB,CAAH,EAA2C;AACvC,eAAO,KAAP;AACH,OAFD,MAEO;AACH,eAAO,IAAP;AACH;;AACL;AACI,aAAO,IAAP;AARR;AAUH,CAXD;;AAcA,MAAMC,aAAa,GAAG,eAAtB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,SAAO;AACHJ,IAAAA,IAAI,EAAEE,aADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACP,KAAD,EAAQC,IAAR,KAAiB;AACxC,SAAO,UAASO,QAAT,EAAmB;AACtB,QAAIT,QAAQ,CAACC,KAAD,EAAQC,IAAR,CAAZ,EAA2B;AACvB,YAAMK,KAAK,GAAG,CAAC,CAACN,KAAK,CAACG,MAAN,CAAa,CAAb,CAAD,EAAkBM,KAAK,CAACN,MAAN,CAAa,CAAb,CAAlB,CAAD,CAAd;AAEAK,MAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACH;AACJ,GAND;AAOH,CARM;;AAUP,MAAMK,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,UAAQA,MAAM,CAACV,IAAf;AACI,SAAKE,aAAL;AACI,aAAOQ,MAAM,CAACN,KAAd;;AACJ;AACI,aAAOK,KAAP;AAJR;AAOH,CARD;;AAUA,eAAeD,YAAf","sourcesContent":["//1 per piece\n//spawns tiles in proper locations\n//conains movement rotation functions\n\nconst canSpawn = (piece, grid) => {\n    switch (piece.type) {\n        case 'BLOCK': \n            if(grid[piece.center[1]][piece.center[0]]) {\n                return false\n            } else {\n                return true\n            }\n        default:\n            return null\n    }\n}\n\n\nconst CREATED_TILES = 'CREATED_TILES'\n\nconst createdTiles = tiles => {\n    return {\n        type: CREATED_TILES,\n        tiles\n    }\n}\n\nexport const createTiles = (piece, grid) => {\n    return function(dispatch) {\n        if (canSpawn(piece, grid)) {\n            const tiles = [[piece.center[0], peice.center[1]]]\n\n            dispatch(createdTiles())\n        }\n    }\n}\n\nconst tilesReducer = (state = [], action) => {\n    switch (action.type) {\n        case CREATED_TILES:\n            return action.tiles\n        default: \n            return state\n    }    \n\n}\n\nexport default tilesReducer"]},"metadata":{},"sourceType":"module"}