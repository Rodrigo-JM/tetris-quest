{"ast":null,"code":"//1 per game\n//creates grid\n//keeps track of tile locations\n//determines validity of coordinates\n//checks for line clears\n//clears lines\nconst CREATED_GRID = 'CREATED_GRID';\n\nconst createdGrid = grid => {\n  return {\n    type: CREATED_GRID,\n    grid\n  };\n};\n\nexport const createGrid = () => {\n  return function (dispatch) {\n    const grid = new Array(20);\n    grid.fill(Array(10).fill(0));\n    dispatch(createdGrid(grid));\n  };\n};\n\nconst boardReducer = (state = [], action) => {\n  switch (action.type) {\n    case CREATED_GRID:\n      return action.grid;\n\n    default:\n      return state;\n  }\n};\n\nexport default boardReducer;","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/redux/board.js"],"names":["CREATED_GRID","createdGrid","grid","type","createGrid","dispatch","Array","fill","boardReducer","state","action"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAY,GAAG,cAArB;;AAEA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAEH,YADH;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAO,UAAUC,QAAV,EAAoB;AACvB,UAAMH,IAAI,GAAG,IAAII,KAAJ,CAAU,EAAV,CAAb;AACAJ,IAAAA,IAAI,CAACK,IAAL,CAAUD,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAV;AAEAF,IAAAA,QAAQ,CAACJ,WAAW,CAACC,IAAD,CAAZ,CAAR;AACH,GALD;AAMH,CAPM;;AASP,MAAMM,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,UAAQA,MAAM,CAACP,IAAf;AACI,SAAKH,YAAL;AACI,aAAOU,MAAM,CAACR,IAAd;;AAEJ;AACI,aAAOO,KAAP;AALR;AAOH,CARD;;AAUA,eAAeD,YAAf","sourcesContent":["//1 per game\n//creates grid\n//keeps track of tile locations\n//determines validity of coordinates\n//checks for line clears\n//clears lines\n\nconst CREATED_GRID = 'CREATED_GRID';\n\nconst createdGrid = grid => {\n    return {\n        type: CREATED_GRID,\n        grid\n    }\n}\n\nexport const createGrid = () => {\n    return function (dispatch) {\n        const grid = new Array(20);\n        grid.fill(Array(10).fill(0))\n\n        dispatch(createdGrid(grid))\n    }\n}\n\nconst boardReducer = (state = [], action) => {\n    switch (action.type) {\n        case CREATED_GRID:\n            return action.grid\n        \n        default:\n            return state\n    }\n}\n\nexport default boardReducer"]},"metadata":{},"sourceType":"module"}