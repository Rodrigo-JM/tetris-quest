{"ast":null,"code":"var _jsxFileName = \"/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GridRow from \"./GridRow\";\nimport { createGrid } from \"../redux/board\";\nimport { createPiece } from \"../redux/pieces\";\nconst keysObj = {\n  40: \"down\",\n  37: \"left\",\n  39: \"right\",\n  32: \"space\",\n  90: \"z\",\n  88: \"x\"\n};\n\nconst createKeyEvent = () => {\n  window.addEventListener(\"keydown\", function (event) {\n    console.log(keysObj[event.keyCode]);\n  });\n};\n\nexport class Grid extends Component {\n  componentDidMount() {\n    this.props.build();\n    createKeyEvent();\n    this.props.createPiece(null, \"BLOCK\");\n    console.log(this.context.redux.getState());\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.props.board.map((row, index) => {\n      return /*#__PURE__*/React.createElement(GridRow, {\n        index: index,\n        key: index,\n        row: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 22\n        }\n      });\n    }).reverse()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.board\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    build: () => dispatch(createGrid()),\n    createPiece: (center, type) => dispatch(createPiece(center, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js"],"names":["React","Component","connect","GridRow","createGrid","createPiece","keysObj","createKeyEvent","window","addEventListener","event","console","log","keyCode","Grid","componentDidMount","props","build","context","redux","getState","render","board","map","row","index","reverse","mapStateToProps","state","mapDispatchToProps","dispatch","center","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,OAAO,GAAG;AACd,MAAI,MADU;AAEd,MAAI,MAFU;AAGd,MAAI,OAHU;AAId,MAAI,OAJU;AAKd,MAAI,GALU;AAMd,MAAI;AANU,CAAhB;;AASA,MAAMC,cAAc,GAAG,MAAM;AAC3BC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAAUC,KAAV,EAAiB;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACI,KAAK,CAACG,OAAP,CAAnB;AACD,GAFD;AAGD,CAJD;;AAMA,OAAO,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAGlCc,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,KAAX;AACAV,IAAAA,cAAc;AACd,SAAKS,KAAL,CAAWX,WAAX,CAAuB,IAAvB,EAA6B,OAA7B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,OAAL,CAAaC,KAAb,CAAmBC,QAAnB,EAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,KAAX,CACEC,GADF,CACM,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnB,0BAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,KAAhB;AAAuB,QAAA,GAAG,EAAEA,KAA5B;AAAmC,QAAA,GAAG,EAAED,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAHF,EAIEE,OAJF,EADH,CADF,CADF;AAWD;;AAtBiC;;AAyBpC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CAJD;;AAMA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,KAAK,EAAE,MAAMa,QAAQ,CAAC1B,UAAU,EAAX,CADhB;AAELC,IAAAA,WAAW,EAAE,CAAC0B,MAAD,EAASC,IAAT,KAAkBF,QAAQ,CAACzB,WAAW,CAAC0B,MAAD,EAASC,IAAT,CAAZ;AAFlC,GAAP;AAID,CALD;;AAOA,eAAe9B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GridRow from \"./GridRow\";\nimport { createGrid } from \"../redux/board\";\nimport { createPiece } from \"../redux/pieces\";\n\nconst keysObj = {\n  40: \"down\",\n  37: \"left\",\n  39: \"right\",\n  32: \"space\",\n  90: \"z\",\n  88: \"x\",\n};\n\nconst createKeyEvent = () => {\n  window.addEventListener(\"keydown\", function (event) {\n    console.log(keysObj[event.keyCode]);\n  });\n};\n\nexport class Grid extends Component {\n\n\n  componentDidMount() {\n    this.props.build();\n    createKeyEvent();\n    this.props.createPiece(null, \"BLOCK\");\n    console.log(this.context.redux.getState());\n  }\n\n  render() {\n    return (\n      <table>\n        <tbody>\n          {this.props.board\n            .map((row, index) => {\n              return <GridRow index={index} key={index} row={row} />;\n            })\n            .reverse()}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    board: state.board,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    build: () => dispatch(createGrid()),\n    createPiece: (center, type) => dispatch(createPiece(center, type)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);\n"]},"metadata":{},"sourceType":"module"}