{"ast":null,"code":"var _jsxFileName = \"/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GridRow from './GridRow';\nimport { createGrid } from '../redux/board';\nimport { createPiece } from '../redux/pieces';\nimport { createTiles } from '../redux/piece';\nconst keysObj = {\n  40: 'down',\n  37: 'left',\n  39: 'right',\n  32: 'space',\n  90: 'z',\n  88: 'x'\n};\n\nconst createKeyEvent = () => {\n  window.addEventListener('keydown', function (event) {\n    console.log(keysObj[event.keyCode]);\n  });\n};\n\nlet currentPieceLocation = [];\n\nconst locationChanged = location => {\n  if (location[0] !== currentPieceLocation[0] || location[1] !== currentPieceLocation[1]) {\n    currentPieceLocation = location;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport class Grid extends Component {\n  componentDidMount() {\n    this.props.build();\n    createKeyEvent();\n    this.props.createPiece(null, 'BLOCK');\n  }\n\n  componentDidUpdate() {\n    if (locationChanged(this.props.piece.center)) {\n      this.props.createTiles(this.props.piece, this.props.board);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.props.board.map((row, index) => {\n      return /*#__PURE__*/React.createElement(GridRow, {\n        index: index,\n        key: index,\n        row: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }\n      });\n    }).reverse()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.board,\n    piece: state.piece\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    build: () => dispatch(createGrid()),\n    createPiece: (center, type) => dispatch(createPiece(center, type))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid);","map":{"version":3,"sources":["/home/rodrigojm/workspace/FullStack_Stuff/tetris-quest/client/src/components/Grid.js"],"names":["React","Component","connect","GridRow","createGrid","createPiece","createTiles","keysObj","createKeyEvent","window","addEventListener","event","console","log","keyCode","currentPieceLocation","locationChanged","location","Grid","componentDidMount","props","build","componentDidUpdate","piece","center","board","render","map","row","index","reverse","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,OAAO,GAAG;AACb,MAAI,MADS;AAEb,MAAI,MAFS;AAGb,MAAI,OAHS;AAIb,MAAI,OAJS;AAKb,MAAI,GALS;AAMb,MAAI;AANS,CAAhB;;AASA,MAAMC,cAAc,GAAG,MAAM;AACzBC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAASC,KAAT,EAAgB;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACI,KAAK,CAACG,OAAP,CAAnB;AACH,GAFD;AAGH,CAJD;;AAMA,IAAIC,oBAAoB,GAAG,EAA3B;;AAEA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAClC,MAAIA,QAAQ,CAAC,CAAD,CAAR,KAAgBF,oBAAoB,CAAC,CAAD,CAApC,IAA2CE,QAAQ,CAAC,CAAD,CAAR,KAAgBF,oBAAoB,CAAC,CAAD,CAAnF,EAAwF;AACpFA,IAAAA,oBAAoB,GAAGE,QAAvB;AACA,WAAO,IAAP;AACH,GAHD,MAGO;AACH,WAAO,KAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMC,IAAN,SAAmBjB,SAAnB,CAA6B;AAEhCkB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,KAAX;AACAb,IAAAA,cAAc;AACd,SAAKY,KAAL,CAAWf,WAAX,CAAuB,IAAvB,EAA6B,OAA7B;AACH;;AAEDiB,EAAAA,kBAAkB,GAAG;AAEjB,QAAIN,eAAe,CAAC,KAAKI,KAAL,CAAWG,KAAX,CAAiBC,MAAlB,CAAnB,EAA8C;AAC1C,WAAKJ,KAAL,CAAWd,WAAX,CAAuB,KAAKc,KAAL,CAAWG,KAAlC,EAAyC,KAAKH,KAAL,CAAWK,KAApD;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKN,KAAL,CAAWK,KAAX,CAAiBE,GAAjB,CAAqB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,0BAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,KAAhB;AAAuB,QAAA,GAAG,EAAEA,KAA5B;AAAmC,QAAA,GAAG,EAAED,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,EAEGE,OAFH,EAFJ,CADJ,CADJ;AAWH;;AA1B+B;;AA6BpC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KADV;AAEHF,IAAAA,KAAK,EAAES,KAAK,CAACT;AAFV,GAAP;AAKH,CAND;;AAQA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHb,IAAAA,KAAK,EAAE,MAAMa,QAAQ,CAAC9B,UAAU,EAAX,CADlB;AAEHC,IAAAA,WAAW,EAAE,CAACmB,MAAD,EAASW,IAAT,KAAkBD,QAAQ,CAAC7B,WAAW,CAACmB,MAAD,EAASW,IAAT,CAAZ;AAFpC,GAAP;AAIH,CALD;;AAOA,eAAejC,OAAO,CAAC6B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport GridRow from './GridRow'\nimport { createGrid } from '../redux/board'\nimport { createPiece } from '../redux/pieces'\nimport { createTiles } from '../redux/piece'\n\nconst keysObj = {\n   40: 'down',\n   37: 'left',\n   39: 'right',\n   32: 'space',\n   90: 'z',\n   88: 'x'\n}\n\nconst createKeyEvent = () => {\n    window.addEventListener('keydown', function(event) {\n        console.log(keysObj[event.keyCode])\n    })\n}\n\nlet currentPieceLocation = []\n\nconst locationChanged = (location) => {\n    if (location[0] !== currentPieceLocation[0] || location[1] !== currentPieceLocation[1]) {\n        currentPieceLocation = location;\n        return true;\n    } else {\n        return false\n    }\n}\n\nexport class Grid extends Component {\n\n    componentDidMount() {\n        this.props.build()\n        createKeyEvent();   \n        this.props.createPiece(null, 'BLOCK');\n    }\n\n    componentDidUpdate() {\n\n        if (locationChanged(this.props.piece.center)) {\n            this.props.createTiles(this.props.piece, this.props.board)\n        }\n    }\n    render() {\n        return (\n            <table>\n                <tbody>\n                {\n                    this.props.board.map((row, index) => {\n                        return <GridRow index={index} key={index} row={row} />\n                    }).reverse()\n                }\n                </tbody>\n            </table>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        board: state.board,\n        piece: state.piece,\n\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        build: () => dispatch(createGrid()),\n        createPiece: (center, type) => dispatch(createPiece(center, type)), \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n"]},"metadata":{},"sourceType":"module"}